#include <iostream>
#include <Eigen/Core>
#include <Eigen/Geometry>
#include <fstream>

using namespace std;
using namespace Eigen;

std::ofstream fout;

int main(){

    //     cam0:
//   T_cam_imu:
//   - [-0.001070287110747692, 0.9999775099474943, -0.006620731433109983, -0.046968717124876616]
//   - [-0.007807037138439998, 0.006612177862667906, 0.9999476632679489, 0.009489474397662172]
//   - [0.999968951846316, 0.001121919391599835, 0.007799784629024531, -0.046206903461258886]
//   - [0.0, 0.0, 0.0, 1.0]

    Isometry3d T_c0_b = Isometry3d::Identity(); //一定要初始化，不然仿射矩阵叠加时会有bug
    Matrix3d R_c0_b = Matrix3d::Identity();
    R_c0_b << -0.001070287110747692, 0.9999775099474943, -0.006620731433109983,
            -0.007807037138439998, 0.006612177862667906, 0.9999476632679489,
            0.999968951846316, 0.001121919391599835, 0.007799784629024531;

    Vector3d t_c0_b;
    t_c0_b << -0.046968717124876616, 0.009489474397662172, -0.046206903461258886;
    T_c0_b.rotate(R_c0_b);
    T_c0_b.pretranslate(t_c0_b);


//     cam1:
//   T_cam_imu:
//   - [0.009858324983608086, 0.9999487481397873, 0.002305324747244264, 0.06378286748281334]
//   - [-0.0009990649217994085, -0.002295586068900013, 0.9999968660720306, 0.01008433938376736]
//   - [0.9999509064438115, -0.009860597257416004, 0.0009763830843686483, -0.04628274541451833]
//   - [0.0, 0.0, 0.0, 1.0]

    Isometry3d T_c1_b = Isometry3d::Identity(); //一定要初始化，不然仿射矩阵叠加时会有bug
    Matrix3d R_c1_b = Matrix3d::Identity();
    R_c1_b << 0.009858324983608086, 0.9999487481397873, 0.002305324747244264, 
            -0.0009990649217994085, -0.002295586068900013, 0.9999968660720306,
            0.9999509064438115, -0.009860597257416004, 0.0009763830843686483;

    Vector3d t_c1_b;
    t_c1_b << 0.06378286748281334, 0.01008433938376736, -0.04628274541451833;
    T_c1_b.rotate(R_c1_b);
    T_c1_b.pretranslate(t_c1_b);

//     cam3:
//   T_cam_imu:
//   - [-0.9999770395874403, 0.0008535162098522019, 0.006722485256069301, ]
//   - [0.006713129004657366, -0.010528556524205824, 0.9999220386592563, ]
//   - [0.0009242277345858016, 0.9999442089474772, 0.010522585019780083, ]
//   - [0.0, 0.0, 0.0, 1.0]

    Isometry3d T_c3_b = Isometry3d::Identity(); //一定要初始化，不然仿射矩阵叠加时会有bug
    Matrix3d R_c3_b = Matrix3d::Identity();
    R_c3_b << -0.9999770395874403, 0.0008535162098522019, 0.006722485256069301,
                0.006713129004657366, -0.010528556524205824, 0.9999220386592563, 
                0.0009242277345858016, 0.9999442089474772, 0.010522585019780083;

    Vector3d t_c3_b;
    t_c3_b << -0.005755208373386481, 0.012255460799754432, -0.05244425820270622;
    T_c3_b.rotate(R_c3_b);
    T_c3_b.pretranslate(t_c3_b);

    Isometry3d T_c4_b = Isometry3d::Identity(); //一定要初始化，不然仿射矩阵叠加时会有bug
    Matrix3d R_c4_b = Matrix3d::Identity();
    R_c4_b << 0.9999608005152463, -0.00764705302431521, -0.004463184171536622,
                0.004463831033452346, 6.752387667768867e-05, 0.9999900347768615,
                -0.007646675448227889, -0.9999707585827533, 0.00010165638238096575;

    Vector3d t_c4_b;
    t_c4_b << 0.006542661540990019, 0.011382357923415307, -0.0754193763154894;
    T_c4_b.rotate(R_c4_b);
    T_c4_b.pretranslate(t_c4_b);

    fout.open("/home/ros/dev_workspace/MCVIO_ws/src/MCVIO/MCVIO/config/MCVIO/newer_college/process_result.txt", ios::out | ios::trunc);
    fout << "Newer College data calibration file " << endl;
    fout << "T_b_cam0: " << endl;
    fout << T_c0_b.inverse().matrix() << endl;
    fout << "T_b_cam1: " << endl;
    fout << T_c1_b.inverse().matrix() << endl;
    fout << "T_b_cam3: " << endl;
    fout << T_c3_b.inverse().matrix() << endl;
    fout << "T_b_cam4: " << endl;
    fout << T_c4_b.inverse().matrix() << endl;
    // cout << T_b_color << endl;
    
    return 0;
}