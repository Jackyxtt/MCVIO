%YAML:1.0

# enum camera_type
# {
#     MONOCULAR,
#     UNKNOWN
# };
imu_topic: "/imu0"
depth_topic: "/velodyne_points"
laser_topic: "/velodyne_points"
odom_topic: "/integrated_to_init"
output_path: "/home/jack/SLAM/MCVIO_ws/src/MCVIO/MCVIO/results"

lio_world_frame: "sensor_init"
vins_world_frame: "vins_world"
camera_frame: "vins_camera"
lio_laser_frame: "sensor"
laser_frame: "sensor"
vins_imu_frame: "vins_imu"

use_lidar_odom_meas: 0 # 1   means use lidar odometry constraints in vins system
scale_lidar_absolute_factor: 3

align_camera_lidar_estimation: 0 # align camera and lidar estimation for visualization

sensor_list: ['cam_0','cam_1']

cam_0:
  sensor_type: 0
  left_image_topic: "/cam0/image_raw"
  frame_id: "cam_0"
  camera_config_file: "/home/yao/MCVIO/src/MCVIO/config/MCVIO/cam360/cam_0.yaml"
  extrinsicRotation_imu_camera: !!opencv-matrix
    rows: 3
    cols: 3
    dt: d
    data: [0.0148655429818, -0.999880929698, 0.00414029679422,
         0.999557249008, 0.0149672133247, 0.025715529948,
         -0.0257744366974, 0.00375618835797, 0.999660727178]
  #Translation from camera frame to imu frame, imu^T_cam
  extrinsicTranslation_imu_camera: !!opencv-matrix
    rows: 3
    cols: 1
    dt: d
    data: [-0.0216401454975, -0.064676986768, 0.00981073058949]
  #feature traker parameters
  max_cnt: 200          # max feature number in feature tracking
  min_dist: 20            # min distance between two features
  freq: 13                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image
  F_threshold: 1.0        # ransac threshold (pixel)
  show_track: 1           # publish tracking image as topic
  equalize: 1             # if image is too dark or light, trun on equalize to find enough features
  fisheye: 0             # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points
  fisheye_path: "/home/yao/MCVIO/src/MCVIO/config/MCVIO/fisheye_mask.jpg"
  image_width: 752
  image_height: 480
  visualize: 1
  use_vpi: 0
  mirror_parameters:
    xi: 0
  distortion_parameters:
    k1: -0.28340811
    k2: 0.07395907
    p1: 0.00019359
    p2: 1.76187114e-05
  projection_parameters:
    fx: 458.654
    fy: 457.296
    cx: 367.215
    cy: 248.375

cam_1:
  sensor_type: 0
  left_image_topic: "/cam1/image_raw"
  frame_id: "cam_1"
  camera_config_file: "/home/yao/MCVIO/src/MCVIO/config/MCVIO/cam360/cam_1.yaml"
  extrinsicRotation_imu_camera: !!opencv-matrix
    rows: 3
    cols: 3
    dt: d
    data: [0.0125553, -0.999755, 0.0182238,
            0.999599, 0.0130119, 0.0251588,
            -0.0253898, 0.0179006, 0.999517]
  #Translation from camera frame to imu frame, imu^T_cam
  extrinsicTranslation_imu_camera: !!opencv-matrix
    rows: 3
    cols: 1
    dt: d
    data: [-0.0198436, 0.0453689, 0.00786212]
  #feature traker paprameters
  max_cnt: 200          # max feature number in feature tracking
  min_dist: 12            # min distance between two features
  freq: 13                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image
  F_threshold: 1.0        # ransac threshold (pixel)
  show_track: 1           # publish tracking image as topic
  equalize: 1             # if image is too dark or light, trun on equalize to find enough features
  fisheye: 1             # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points
  fisheye_path: "/home/yao/MCVIO/src/MCVIO/config/MCVIO/fisheye_mask.jpg"
  image_width: 752
  image_height: 480
  visualize: 1
  use_vpi: 0
  mirror_parameters:
    xi: 1.8075725317445792
  distortion_parameters:
    k1: -0.28368365
    k2: 0.07451284
    p1: -0.00010473
    p2: -3.55590700e-05
  projection_parameters:
    fx: 457.587
    fy: 456.134
    cx: 379.999
    cy: 255.238

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
  # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
# 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
#for handheld, wheeld
acc_n: 2.0e-03          # accelerometer measurement noise standard deviation. #0.2
gyr_n: 1.7e-04         # gyroscope measurement noise standard deviation.     #0.05
acc_w: 3.e-03         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 1.9393e-05       # gyroscope bias random work noise standard deviation.     #4.0e-5

#for tracked applications
#acc_n: 0.5          # accelerometer measurement noise standard deviation. #0.2
#gyr_n: 0.01         # gyroscope measurement noise standard deviation.     #0.05
#acc_w: 0.001         # accelerometer bias random work noise standard deviation.  #0.02
#gyr_w: 2.0e-5       # gyroscope bias random work noise standard deviation.     #4.0e-5



g_norm: 9.81007       # gravity magnitude

#loop closure parameters
loop_closure: 0                    # start loop closure
fast_relocalization: 0             # useful in real-time and large project
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/shiboz/visual_odometry/VINS-RGBD" # save and load path

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: -0.073162                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 0                      # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0.033               # unit: s. rolling shutter read out time per frame (from data sheet).

#visualization parameters
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ

# Kd tree search parameter
lidar_search_radius: 0.1

# debug
# whether to estimate scale when lidar provided
estimate_scale: 1
scale: 0.5
depth_support_init: 0
skip_default_init_method: 0

# PnP simple init, depth information should be provided
PnP_simple_init: 0


#rolling shutter parameters
rolling_shutter: 0                      # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0.033               # unit: s. rolling shutter read out time per frame (from data sheet).
